"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.deactivate = exports.activate = void 0;
const client_1 = require("./client/client");
const logger_1 = require("./logger/logger");
const clientID = "731545228539985940";
const client = new client_1.Client(clientID);
exports.activate = (ctx) => __awaiter(void 0, void 0, void 0, function* () {
    logger_1.LOG(logger_1.LogLevel.Info, "extension activated, trying to connect to Discord gateway");
    yield client.connect(ctx);
});
exports.deactivate = () => __awaiter(void 0, void 0, void 0, function* () {
    logger_1.LOG(logger_1.LogLevel.Info, "extension deactivated, trying to disconnect from Discord gateway");
    return yield client.disconnect();
});
process.on("unhandledRejection", (err) => logger_1.LOG(logger_1.LogLevel.Err, err));
